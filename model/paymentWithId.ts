/**
 * Spendies Backend API
 * This RESTful API is for accessing the back-end functionality of Spendies,  such as registering and verifying accounts, and creating and retrieving wallets, payment requests, and performing payment fullfilments.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: connect@spendies.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { OriginatorRecipient } from './originatorRecipient';
import { Payment } from './payment';
import { PaymentWithIdAllOf } from './paymentWithIdAllOf';

export class PaymentWithId {
    /**
    * ID of Payment
    */
    'paymentId': string;
    /**
    * Type of transaction
    */
    'type': PaymentWithId.TypeEnum;
    /**
    * Initiated date of payment
    */
    'dateInitiated': string;
    /**
    * Reason for payment request
    */
    'reasonForPayment': string;
    /**
    * Target (crypto) currency to be paid in
    */
    'targetCurrency': string;
    /**
    * Target (crypto) amount to be paid
    */
    'targetAmount': number;
    /**
    * Source (fiat) currency used for conversion
    */
    'sourceCurrency'?: string;
    /**
    * Source (fiat) amount to be converted
    */
    'sourceAmount'?: number;
    /**
    * Amount of expected payments
    */
    'expectedPayments': number;
    'recipients'?: Array<OriginatorRecipient>;
    'originators'?: Array<OriginatorRecipient>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "paymentId",
            "baseName": "paymentId",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "PaymentWithId.TypeEnum"
        },
        {
            "name": "dateInitiated",
            "baseName": "dateInitiated",
            "type": "string"
        },
        {
            "name": "reasonForPayment",
            "baseName": "reasonForPayment",
            "type": "string"
        },
        {
            "name": "targetCurrency",
            "baseName": "targetCurrency",
            "type": "string"
        },
        {
            "name": "targetAmount",
            "baseName": "targetAmount",
            "type": "number"
        },
        {
            "name": "sourceCurrency",
            "baseName": "sourceCurrency",
            "type": "string"
        },
        {
            "name": "sourceAmount",
            "baseName": "sourceAmount",
            "type": "number"
        },
        {
            "name": "expectedPayments",
            "baseName": "expectedPayments",
            "type": "number"
        },
        {
            "name": "recipients",
            "baseName": "Recipients",
            "type": "Array<OriginatorRecipient>"
        },
        {
            "name": "originators",
            "baseName": "Originators",
            "type": "Array<OriginatorRecipient>"
        }    ];

    static getAttributeTypeMap() {
        return PaymentWithId.attributeTypeMap;
    }
}

export namespace PaymentWithId {
    export enum TypeEnum {
        Receive = <any> 'receive',
        Give = <any> 'give'
    }
}
